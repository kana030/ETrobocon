10:00から18:00まで
ロボットの組み方と規約を確認→わからない箇所があれば休み時間等に確認

10：05　審査規約
プライマリークラス
  1-3モデルを書くとき、モデルを書いた後に審査内容がきちんとかけているか確認する

  今日の研修→機能の定義

  アブストラクトシート→まだ展開されていない(後ほど実行委員会から展開される)(アドバンストも同様に後ほど展開)

  アブストラクトシート含めて1ファイルにする

アドバンストクラス
  走行体の動作
  (1つ目)(2つ目)→記述内容に注意(?)
  分析モデル→決め打ちのやつは評価が下がる
  Rコースが対象だが、直角駐車場停止は制御モデルの調査対象外
  トレーサビリティ両方書いたら良いほう

わからないこと→メーリングリストに質問
モデルを審査するとき、文字が小さすぎると字が読めない→審査できない
→少し文字を大きめ(審査員の年齢に配慮を…)

10：23　chap3
今回…要求分析からテストまで行う

倒立振子ライブラリ
ジャイロセンサ→個体差がある…複数ロボットがある場合とか、毎回補正を行う
モータにまっすぐ走れの命令→徐々に曲がったり→補正を行う

4msecごとに呼ばなくてもよいものもある？
クラスの属性
ジャイロセンサ
個体差を制御できるように
モータの初期化
↓
Cのライブラリをクラス化するのもよいのでは？

【要求分析】
対象となるシステム…今回はジグザグ進むようにする→2輪倒立走行ロボット(サブジェクト)
アクター→ユーザ(利用者のことなので私)

ユースケースごとにユースケース記述を書く
複数ある場合はユースケース記述が複数ある

ユースケース図(処理の流れがわからない)
↓
アクティビティ図に処理の流れを書く
どんな風に動くのかに着目

よく使う
デシジョン、ガード条件、パーティション

【基本設計】
部品の候補を箇条書きとかでまとめる
部品の候補→オブジェクト図でまとめる(部品間にどういったつながりがあるのか)
→処理を頼む側と処理を頼まれる側を線でつなぐ

頼む側…アクター

コミュニケーション図で部品を組み合わせて機能が実現できるかかくにん
間違いを見つけたら、修正して機能が実現できるか確かめる

クラス図を書く

クラス図をコミュニケーションズで表し、表せるかどうか確認
時系列、ループは表しにくい
クラスの関係はわかりやすい

シーケンス図
順番、時系列などがわかりやすい
理解度チェック(3)→復習の時に。復習として使って

10：58　chap4(ここから記憶が薄れる)
詳細設計【詳細設計】
タスク、ハンドラはクラスに書くのおかしいけど、今回は書いた
シーケンス図→ノートを書いて
、わかりやすく！

【実装】
-→自分だけが参照
+→他の倉図から参照する
関連橋名→クラスの編集

他クラスへの関連も書く
コンストラクタがない一

アクティビティ図、シーケンス図を見ながら参照

12：11スポンサ
TDCSOFT
NABCO
YDC
東光高岳

13：20スポンサ
ウルトエレクトロニクス

13：40　chap-05.pdf

拡張したときにどうすればよいのかを実践
今回→5章のみ。6章以降は自習
etrobo_tr.astaを使う


【技術教育2】「開発プロセスに沿って開発する」資料4 20112233.zip
PW[VLfUVGgBe]
回答が書いてある。もし時間内に終わりそうになければ回答を見て作業を進める。
参考程度に


ユースケース記述は「誰がどうする」という形で書く

機能実現に必要な部品を見つける(1)の部品の候補
→クラス図を作る際の参考にする
候補を作って表にする。→オブジェクト図を作って整理する


スターターはタッチセンサが押されているか調べる(実際に調べるのはタッチセンサ)

クラス図(役割)→どんな情報を持たせるのか、どんな機能があるのか、どんな関係(多重度など)か

【操作方法でわからなかったもの】
アクティビティ図→パーティション
オブジェクト図→インスタンス

アクティビティ図…条件が複数あると書くのが大変
              同時にいろいろ起こると大変
        ↓
ステートマシン図…待っている出来事や、出来事が起きた時の動作がわかる

処理の順序をもとに書く→アクティビティ図
