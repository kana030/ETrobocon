▼地区大会ツアー 10:00〜10:15
地区大会から本番までの流れ説明

▼キャリブレーション講義 10:15〜10:30
キャリブレーション＝その場の環境に合わせて正しい値になるように調整すること
→センサの個体値、その場の環境　×

・ジャイロセンサ(バランス制御！！)
角速度を計測
オフセット値が適切でない←急加速/直進命令で止まったり後退したり
→走行前にジャイロセンサ値計測　オフセット値とする
走行前にキャリブレーションタイムあるよ！

・カラーセンサ(ライントレース！！)
明るさとセンサ値 単純な比例関係ではない
コースのRGB値は一意
閾値が適切でない←光源の種類、数…etc

▼使用ソフトウェアについて 10:25〜10:30
ソースはCとC++
キャリブレーション/フェールセーフ/PID
技術教育2の演習１に上記機能の追加
変化点は資料参照

▼キャリブレーション演習 10:30〜11:45
走行体の組立確認

・キャリブレーション処理の実装

・ジャイロキャリブレーション
演算回数を決め、
キャリブレーション値＝(積算値)/(演算回数)
→一度では適切な値が取れているとは思えないので、
　演算を何度も行い、その行った数で割り平均を得る
　実装すべき！！！！！！！！！
　画面にジャイロ、黒、白の値が画面に出ているととても分かりやすかった。

灰色ラインを黒と認識して走らせる(？)

▼お昼 11:45〜12:45

▼フェールセーフ講義 12:45〜12:53
もしものときに備えて、何かが起こった時も
被害を最小限にする＝フェールセーフ

フェールセーフ例について

ETロボコンの場合
→カラーセンサ「白」が長時間
　ラインから外れている
→灰色マーカーの検知する予定が検知できない

どうする？判別方法は？想定通りではないときどうする？
フェールセーフ取り入れ　完走率の向上

▼フェールセーフ演習　12:53〜13:45

今回の演習
ロボットの転倒時
車輪が回り続ける
・コースにダメージ
・モータ耐久性にダメージ
・バッテリーの消耗
→転倒の判断　車輪の停止

左右モータの値が100を超えるOR-100以下の時
カウント増加
カウント→倒れた状態がしばらく続いたことを
判断する

ジャイロの値で判定する→あり
光センサでもできる？

▼PID制御　13:45〜14:15

ONOFF制御

フィードバック制御
・対象の状態を見て
・目標との差を見て
・出力を変化させる


・P制御(現在の状況重視)
最も制御に影響を与える
偏差を０に収束できない(オフセットが生じる)

・I制御(過去の状況を重視)
Pで生じたオフセット量の除去
基本Pとセット
時間と共に累積値が変動→時間を有する
積分量はある程度までの値
→たまりすぎるとオーバーフロー

・D制御(将来の状況を重視)
偏差増加、減少傾向の大きさに比例

PID検討ワークシート
値を入力することによってシュミレーションを
行うことが出来る！


入力値のまとめ
入力信号のの位置調整　B4　位相＝90
積分の特性　G5　係数I＝0.025
微分の特性　H5  係数D＝40
PD制御　F5　係数P＝0.4
	G5　係数I＝0
	H5　係数D＝36
PD制御の問題点　B3　オフセット＝0.5
PID制御　G5　係数I＝0.005 


▼PID制御演習　14:15〜15:00

PIDゲイン値をそれぞれいじってみる

▼その他テクニック 15:00〜15:15

・カラーセンサのキャリブレーション
キャリブレーション時は走行時の角度に近くなるようにやる
→しっぽで立たせて取得が安定するらしい

・ログ取得
SDカード、ブルーテュース
Fopen()等ファイル操作関数で
ブルーテュース、ライブラリがある

動きを見てここら辺が間違ってそうだな〜〜〜×
人が見ているもの、ロボットが計測しているもの
違うので、ログで確認！！

・画面表示
走行体の設置ミスの防止

・タッチセンサ
トリガーのタイミング
ボタン押下時よりボタン解放時の方がリスク低減
押したときの力がロボットにかかっているので
チャタリングに気を付けましょう

・スターター
模擬レースなどで、第三者の掛け声でスタートできるようにしておく
緊張するぞ！

・走行体の設置
スタート時、バランスを取るため前後する
倒立開始で発生する前後の移動量を考慮

・BTからタッチへ
よくよくチェックしておく
スタート時にブルーテュース通信が切れており、
ブルーテューススタート失敗時にタッチセンサ―での
スタート操作に切り替え
※「デベロッパー部門競技規約　6.5リモートスタート」参照

・チーム連携
コース貸し借り
モデル相互レビュー

・ウィンドウズアップデート気を付けてね！


▼でかタイヤサンプル作った人の話 15:15〜15:40
制御上タイヤバックラッシュキャンセルなど
行っている
個体差が今年は結構シビア
サンプルは５分間倒立できる程度
突き詰めるのなら

EV3RTの周期タスクでタイミングを取っている
0.004にしておくこと
→配布のものはコメントにされてますよ

係数調整
balancer_param.c
K_F[2]速度ゲインの係数調整
三番目の値？
0.70から0.02ごと増減調整
最終的に0.01で調整
倒立制御が過剰に感じる→値小さく
制御不足で不安定→値大きく

勝てる倒立振子APIパラメタの求め方.pdf　参照
→やるべき！！！！！

その他にもいじってほしいパラメータなど
わざわざ紹介しているので、
行うべきでは


URLから

重心の高さの設定
ボディハイト？body height

balancer_param
車体目標旋回角速度係数　
車体の幅が変わっているので変わっている

モータ目標回転角速度係数
タイヤ径の変更にあわせ変えている
モータの性能的にまだあげれる
見た目は同じでも速度は今年のはまだ上げれる

バックラッシュ
改変OK

ブルーテュースの転送
上の記事内にあるぞ



試走会 8月初め
チーム二つにわける(午前/午後)
早いもの順！！！！！！





